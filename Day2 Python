***REVIEW***
basic data types: int float str bool
tuples, list[0]
basic math
typecast
print() type()
brace expansion #pemdas for parenthesis 
.split() .join() .append()

***LIST EXAMPLE***
list('hello')
world = list('hello')
world
['h , 'e' , 'l' , 'l' , 'o']
world[0]
h
world[0] = 'j'
world
['j , 'e' , 'l' , 'l' , 'o']
jiff[0] = 'h'
jiff
['h , 'e' , 'l' , 'l' , 'o']
''.join(jiff)
'hello'


***LOOPS AND FLOW CONTROL***  

Branching

***FizzBuzz***

#!/usr/bin/env python3

num = int(input('Type a number:\n'))
if num % 5 == 0 and num % 3 == 0:
   print('fizzbuzz')
elif num % 3 == 0:
    print('fizz')
elif num % 5 == 0:
    print('buzz')
else:
    print(num)

***Example: merging conditions, and or etc***

num = 7
#if 0 <= num and num <= 10:
if 0 <= num <= 10:
   print(num)

***Functions***
***While Loop***

while True:
   usr = input('Type pass, continue, or break:\n').lower()
   if usr == 'pass':
      pass #pass says pass on to next instruction
      print('This is pass')
   elif usr == 'continue':
      continue #skip the remaining code inside a loop
      print('This is continue')
   elif usr == 'break':
      break #breaks out of the loop
      print('This is break')
   else:
      print('Invalid option')

***While loop practice***
#!/usr/bin/env python3

def guess_number(n):
   condition = True
   while condition:
      guess = int(input('Enter 1 - 100:\n'))
      if guess < n:
         print('too low')
      elif guess > n:
         print('to high')
      else:
         print('WIN')
            condition = False

guess_number(23)

return str(::-1)

***For loops***

party = ['Gengar','Charmander','Pikachu','Bulbasaur']
for i in party:
   print(i)

counter = 0
for poke in party:
   print('Pokemon {} is {}!'.format(counter+1,poke))
   counter += 1
