https://net.cybbh.io/public/networking/latest/index.html
https://miro.com/app/board/o9J_klSqCSY=/?share_link_id=16133753693
http://networking-ctfd-1.server.vta:8000/user
RYVA-M-503
Jump Box

    Student#: student18

    Command: ssh student@10.50.27.58 -X

    Password: password


###FUNDAMENTALS
OSI model
-Physical
-Data Link   ###ARP
-Network   ###Routing protocols
-Transport   ###TCP, UDP
-Session   ###SOCKS, NetBIOS
-Presentation   ###How data is presented, ie.  JPEG, DOC
-Application   ###HTTPS, Telnet, IMAP, SSH

###Protocol Data Unit (PDU)
Physical = Bit
Data Link = Frame
Network = Packet
Transport = Segment / Datagram
Session-Application = Data

###Internet Standards Organizations
IETF - RFC's ###Request for comment
IANA - Internet Numbers ###Control IP's
IEEE - LAN/WAN electrical standards ###ie. 802.11

Binary, Hex conversion
Base64

###Topologies 
Bus   ###Half Duplex, can only communicate one way
Star   ###
Ring   ###
Mesh   ###Full and Partial
Wireless   ###
Hierarchial   ###

###Devices
Hubs   ###L1
Repeaters   ###
Switches   ###L2
Routers   ###L3

###Ethernet Timing (Bit-Time)
 Speed 	   Bit-time

10 Mbps  | 100ns

100 Mbps | 10ns

1 Gbps   | 1ns

10 Gbps  | .1ns

100 Gbps | .01ns



###Data Link Sub-Layers
MAC (Medium Access Control) 
LLC (Logical Link Control)

Encapsulation

###Switch Operation
Build Mac-Address (CAM) Table
Forwarding Frames

###Switching Modes
Cut-Through
Fragment-Free
Store-and-Forward

###CAM Table Overflow Attack
Send Frames with bogus sourse MAC address to switch
Cause switch to fill table with bogus addresses
Switch will not be able to learn new (valid) MAC addresses

###Describe MAC Addressing
Length: 48-bit | 6 byte | 12 Hex
Format:
 Windows: 01-23-45-12-34-56
 Unix/Linux: 01:23:45:12:34:56
 Cisco: 1234.1234.1234

###MAC Address Types
Unicast
Multicast
Broadcast

###Data Link frame headers
Destination (Only checked by cut through)
Source
Ethertype
Payload / Data / SDU
CRC / FCS

###VLAN
Logically seperate your network

###Trunk Link
Connects two switches (then you need STP)

###VLAN TYPES
Default - VLAN 1
Data - User traffic
Voice - VOIP traffic
Management - Switch and router managment
Native - Untagged switch and router traffic

802.1Q Header
802.1AD Header ###Double tagging, if a ISP wants to throw another tag on the header, 88 A8

###VLAN Hopping Attack
Switch Spoofing
Single Tagging
Double Tagging
SCAPY Example Code

###Address Resolution Protocol (ARP)
IP to MAC OR MAC to IP
###Types
ARP (OP 1 and 2)
RARP (OP 3 and 4)
Proxy ARP (OP 2)  ###Answers on a different network
Gratuitous ARP (OP 2)  ###Like a broadcast

###ARP CACHE
All resolved MAC to IP resolutions

###Man-In-The-Middle (MITM) With ARP
Poison ARP Cache with:
 Gratuitous ARP
 Proxy ARP
SCAPY Example Code

###VLAN Trunking Protocol (VTP)
Cisco Proprietory 
###VTP Vulnerablity 

###Dynamic Trunking Protocol (DTP)

###CDP, FDP, and LLDP
Cisco Discovery Protocol (CDP)
Foundry Discovery Protocol (FDP)
Link Layer Discovery Protocol (LLDP)
###Vulnerabilities
Clear Text (CDP Neighbor)
Enabled by default

###Spanning Tree Protocol (STP)
Prevents looping
1. Elect Root Bridge
2. Identify the Root ports on non-root bridge
3. Identify the Designated port for each segment

###Spanning Tree Attack
Crafted Bridge Protocol Data Units (BPDU)
Used to perform a DOS or MitM

###Port Security Modes
Shutdown (default)
Protect
Restrict

Restrict unauthorized access
Limit MAC address learned
prevents CAM attack

###Port Security Vulnerabilities
MAC Spoofing

###Layer 2 Attack Mitigation Techniques
Shutdown unused ports
Enable Port Security
IP Source Guard
Manually assign STP Root
BPDU Guard
DHCP Snooping
802.1x
Dynamic ARP inspection (DAI)
Static CAM entries
Static ARP entries
Disable DTP negotiations
Manually assign Access/Trunk ports




###NETWORK LAYER
Addressing Schemes for Network (Logical Addressing)

###Internet Protocol Versions
IPv4 (ARPANET 1982)
 Classful
 Classless subnetting (CIDR)
 NAT
IPv6 (Standardized 2017)

###Classful IPv4 Addressing and subnetting
Class A (0 to 127)
Class B (128 to 191)
Class C 
Class D
Class E

###Subnetting
IP addresses
 Network Portion
 Host Portion
Practoce of borrowing host bits for subnetting bits

###IPv4 Packet Header
https://net.cybbh.io/public/networking/latest/02_network/fg.html

###IPv4 Address Scopes
Public
Private (RFC 1918)
Loopback (127.0.0.0/8)
Link-Local (APIPA)
Multicast (Class D)

###IPv4 Fragmentation
Breaking up packets from higher MTU to lower MTU network
Performed by routers
MF flag is on from 1st until 2nd to last
Offset is on from 2nd until the last
Offset = (MTU - (IHL x 4)) / 8  ###IOT to calculate the fragment offset

###Fragmentation Process

###IPv6 Fragmentation
IPv6 does not support fragmentation within its header
Routers do not fragment IPv6 packets
Source adjusts MTU to avoid fragmentation

###Fragmentation Vulnerablities 
Can use fragmentation overlaps to avoid firewall detection
Attack depends on how 

APIPA RFC 3927
DHCP RFC

###IPv4 Auto Configuration Vulnerability 
Rogue DHCP
Evil Twin
DHCP Starvation ###Spams discover requests

###ICMPv4 Protocol and Header Structure

###ICMPv4 OS Fingerprinting 
Linux:
 Default size: 64 bytes
 Payload message:
Windows:
 Default size:
 Payload message:

###ICMPv4 Traceroute
Identifies hops between the source and destination
Uses incrementing TTLs

Can use various protocols and ports
 ICMP
 UDP
 TCP

###ICMPv4 Attacks
Firewalking (traceroute)
Oversized ICMP messages
ICMP Redirects
SMURF Attack
Map network w/ IP unreachables
ICMP Covert Channels

###IPv6 Addressing
128 bit address
64-bit Prefix
64-bit Interface ID
idk fast af

###IPv6 Subnetting
Organizations assign a 48-bit Prefix by IANA
Last 16-bits of the prefix are used for subnetting
fast af

###IPv6 Header

###IPv6 Representation
Can be shorten consecutive 0s with ::
Can only use it once

###IPv6 Address Types
Unicast 
Multicast
Anycast

###IPv6 Address Scopes
Global Unicast Addresses (2000::/3)
Unique Local (
finish later



###IPv6 Zero Configuration
Hosts request global prefix
 SLAAC (RFC 4862) (default)

###Dynamic Routing Protocols
Classful vs Classless
***Know the differences

###  Routed     vs          Routing Protocols
RIP, EIGRP, OSPF, BGP     IPv4, IPX, Appletalk, NetWare

###IGP and EGP
Autonomous system numbers

###Autonomous Systems

###Distance Vector Routing Protocols
Spread via rumor

###Link State Routing Protocols
LSA = Link state advertisment 

###Routing Protocol Vulnerabilities
DDOS, PMA

###BGP
Road-map of the internet
Routes traffic between AS Number
Advertises IP CIDR address block
Establishes Peer relationship

###BGP Operation

###BGP Hijacking
Illegitimate advertising

###BGP Hijacking Defense
IP prefix filtering

###Static Routing
Advantages
 Does not send updates
 No bandwidth used and minimal system resources
 Data path is pre-determined
Disadvantages
 Time consuming and prone to error in configuration
 Administrator must intervene during any network outages
 Does not scale well for large growing networks

###Dynamic Routing
Advantages
 Easier to configure
 Intervention not needed with outages
 Scales well for large networks
Disadvantages
 Consumes bandwidth
 Updates can be intercepted
 ahhhhhhhhhhhhh fg

###First Hop Redundancy Protocol

###OSI Layer 4 Ports
###Transport Layer Protocols
Connections-oriented
 tcp


###Port Ranges
0-1023 Well Known (System)
1024-49151 Registered (User)
49152-65535 Dynamic (Private)

###TCP Headers

###TCP Options
0
1
2
3
4 Selective ACK (SACK) Permitted
5 SACK
8 TCP Timestamps

###TCP Flag Breakout

###UDP Header
Source port
Destination Port
Length
Checksum

###Layer 5

###VPN
Ecapsulate traffic between two end points
Types:
 Remote Access
 Site-to-Site
 Client-to-Site

###L2TP (UDP 1701)
RFC 2661
Origins from Cisco L2F and Microsoft PPTP
Tunnel only. No Encryption

###PPTP (TCP 1723)
RFC 2637
Microsoft

###L2F (UDP 1701)
Cisco
Tunnel only. No Encryption

###IPSec
Modes: Transport or Tunnel
Headers:
 ESP (protocol 50)
 AH (protocol 51)
 IKE (protocol

###IPSec Transport Mode

###IPSec Tunnel Mode

###OpenVPN
Open Source
Uses OpenSSL for Encryption
UDP*/TCP

###Proxies

###SOCKS 4/5 (TCP 1080)
RFC 1928
Uses varios Client / Server exchange messages
 Socks protocol forward tcp traffic through tunnel *IF you attempt to forward UDP traffic with SOCKS youll look dumb

###SOCKS4
No UDP support

###SOCKS5
IPv4 and IPv6
UDP support

###NETBIOS
TCP 139 and UDP 137/138
Name Resolution (15 characters)
Largely replaced by DNS

###SMB / CIFS (TCP 445)
SMB Rides over Netbios

###RPC (Any Port)
Allows a program to execute a request on a local / remote computer
Hides network complexities
XML, JSON, SOAP, and gRPC

###API
Framework of rules and protocols for software components to interact
Methods, parameters, and data formats for requests and responses
REST and SOAP

###LAYER 6
Responsibilities
 Translating
 Formating
 Encoding (ASCII, HEX, BASE64)
 Encryption (Symmetric or Asymmetric)
 Compression

###LAYER 7

###TELNET (TCP 23)
Remote Login
Authentication
Clear Text
Credentials susceptible to interception

###SSH (TCP 22)
Messages provide:
 Client/server authentication
 Asymmetric or PKI for key exchange
 Symmetric for session
 User authentication
 Data stream channeling

###SSH Architecture
Client / Server / Session
Keys
 User Key - Asymmetric public key used to identify the user to the server
 Host Key - Asymmetric public key used
 Session Key

###SSH First Connection

###SSH Host Key Changed
***KEEP TRACK OF THIS

###SSH Files
~/.ssh/known_hosts
Configs
/etc/ssh/ssh_config
/etc/ssh/sshd_config

###SSH-KEYGEN
Create your own SSH Public/Private Keys

###HTTP(S) (TCP 80/443)
User Request methods
 Get / Head / Post / Put
Server response Codes
 100, 200, 300, 400, 500

###HTTP(S) Vulnerablities
Flooding
Amplification
Low and Slow
Drive-By Downloads
BeEF Framework

###DNS (TCP/UDP 53)

###DNS Query / Response

###DNS Records
A
AAAA
MX
TXT
NS
SOA

###DNS DOmains

###FTP (TCP 20/21)
RFC 959
Port 21 open for Control
Port 20 only open during data transfer
Authentication or Anonymous
Clear Text
Modes
 Active (default)
 Passive

###FTP Active
client initiates
connect to default data port (20)
###FTP Passive
client initiates
connect to passive port

###TFTP (UDP 69)
Clear Text
Reliability provided at Application Layer

###SMTP (TCP 25)
Used to send email
no encryption

###POP (TCP 110)
Recieves email

###IMAP (TCP 143)
Recieves email
No encryption

###DHCP (UDP 67/68)
DORA
Discover (Broadcast)
Offer (Unicast)
Request (Broadcast)
Acknowledge (Unicast)

###DHCPV6
Managed flag is set during SLAAC
Solicit (Multicast)
Advertise
Request
Reply

###NTP (UDP 123)
Network Time Protocol

###AAA Protocols

###TACACS (TCP 49) Simple / Extended
Cisco

###RADIUS (UDP

###DIAMETER (TCP 3868)

###SNMP (UDP 161/162)

###RTP (UDP any above 1023)

###RDP (TCP 3389)

###Kerberos (UDP 88)
Secure network authentication protocol
Windows Active Directory

###LDAP(S) (TCP 389 AND 636)
Client / Server model
Hierarchical
Directory schema
Unsecure and secure versions




###Network Traffic Sniffing
Libpcap
WinPcap
NPcap

###Use of sniffing tools
Advantages

Disadvantages
    Requires elevated permissions
    Can only capture what the NIC can see
    Cannot capture local traffic
    Can consume massive amounts of system resources
    Lost packets on busy networks

###Packets can be captured in two ways
Hardware packet sniffer
Software packet sniffer

###Socket Types
User Space Sockets
    Stream socket - TCP
    Datagram socket - UDP
Kernel Space Sockets

###Capture Library
Requires root for:

###Types of Sniffing
Active - Actually interact with the device
Passive - Sit back and listen

###Popular Software Packet Programs
tcpdump, wireshark, tshark, p0f, networkminer, netminer, solarwinds, bettercap, ettercap
###Other PAcket Capture Programs
nmap, snort, scapy, suricata

###Interface Naming
Traditional
    eth0, eth1
Consistent

###TCPDUMP PRIMITIVES
User friendly capture expressions
    src or dst, host or net, tcp or udp

type - the 'kind of thing'
dir - transfer direction
proto - 

###Basic tcpdump options
sudo tcpdump -r <PCAP> -XX -vv
sudo tcpdump port 80 or 22 -vn (verbose names)
sudo tcpdump arp (or any other protocol in the pcap)

###Berkley Packet Filtering (BPF)
Similar to primatives
Reduces redundant computations
More complex expressions

###Compare Primatives and BPFs
BPF
    Control Flow Graph (CFG) model

###Kernel API
TCPDUMP requests a RAW Socket creation
Filters are set using SO_ATTACH_FILTER
SO_ATTACH_FILTER allows us to attach BPF

###Berkley Packet Filters (Like regex, its a tool that works on multiple platforms)
still uses tcpdump
tcpdump -i eth0 'ether[12:2] = 0x0806'
tcpdump -i eth1 'ip[9] = 0x06'
tcpdump -i eth0 'tcp[0:2] = 53 || tcp[2:2] = 53'
tcpdump 'ether[12:2] = 0x0800 && (tcp[2:2] != 22 || tcp[2:2] != 23)'

###Bitwise masking
BPFs can read 1 byte, 2 halfword or 4 word
BPFs alone will only filter 

###Bitwise masking examples
tcpdump 'ether[12:4] & 0xffff0fff = 0x81000abc' (8100 = vlan) (f = all bits, 0 = off, 1 = only the 1st bit 2 = second bit)
tcpdump 'ip[1] & 252 = 32'
tcpdump 'ip[6] & 224 != 0'
tcpdump 'tcp[13] & 0x11 = 0x11'
tcpdump 'tcp[12] & 0xf0 > 0x50'


#Search for MF set or offset field having any value greater than 0
'ip[6] & 0x20 || ip[6:2] & 0x1fff > 0'
'ip[6] & 32 = 32 || ip[6:2] & 8191 > 0'

#Search for offet field having any value greater than 0
'ip[6:2] & 0x1fff > 0'
'ip[6:2] & 8191 > 0'






