Handbook: https://cted.cybbh.io/tech-college/pns/public/pns/latest/guides/bash_sg.html
Find Exec: https://linuxhandbook.com/find-exec-command/
touch -t yymmddhhmm.ss

mkdir -p #makes nested directory (p for parent)

umask

rm -r or -rf

w, who, whoami

tar -czf

locate find | 
whereis 

#VERY FUCKING IMPORTANT
find -name #case sensitive
find -iname #case insensitive
find -inum
find -size 
find -gid
find -maxdepth
find / -type s -exec echo {} 2>/dev/null \; | grep domain*   #type s (sockets)
#time = days. c time = change, a time= access, m time= modified
find -cmin -30
find /var/log -iname #.log -exec ls -al {} 2>/dev/null \;

grep -E #for regex
grep -v #inverts search ,ie find everything except this

mkdir sushi{11,22,33,44}
mkdir 11{23,34,45,56)

#Using Brace-Expansion, create the following directories within the $HOME directory: 1123 1134 1145 1156
mkdir 11{23,34,45,56
#Use Brace-Expansion to create the following files within the $HOME/1123 directory. 
touch $HOME/1123/{1..5}.txt $HOME/1123/{6~,7~,8~,9~}.txt
#Using the find command, list all files in $HOME/1123 that end in .txt.
find $HOME/1123/*.txt
#List all files in $HOME/1123 that end in .txt. Omit the files containing a tilde (~) character.
find $HOME/1123/*.txt | grep -v "~"

ps -u student (--forest) #what someones doing

#Copy all files in the $HOME/1123 directory, that end in ".txt", and omit files containing a tilde "~" character, to directory $HOME/CUT.
find $HOME/1123 -name "*.txt" -not -name "*~*" -exec cp {} $HOME/CUT \;      
#Using ONLY the find command, find all empty files/directories in directory /var and print out ONLY the filename (not absolute path), and the inode number, separated by newlines.
find /var -empty -printf "%i %f\n"
#Using ONLY the find command, find all files on the system with inode 4026532575 and print only the filename to the screen
find -inum 4026532575 -printf "%f\n" 2>/dev/null

Cut commands
-s not like as grep -v
ls -l | cut -d " " -f 1   #Only show permissions field

#Using only the ls -l and cut Commands, write a BASH script that shows all filenames with extensions ie: 1.txt, etc., but no directories, in $HOME/CUT.
ls -l $HOME/CUT | cut -d. -f1- -s | cut -d" " -f9 > $HOME/CUT/names
